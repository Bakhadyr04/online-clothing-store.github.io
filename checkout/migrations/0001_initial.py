# Generated by Django 3.2.10 on 2024-06-16 14:58

from django.db import migrations, models    # Импорт модулей миграций и моделей Django
import django.db.models.deletion            # Импорт типа удаления моделей Django

class Migration(migrations.Migration):
    initial = True  # Указываем, что это начальная миграция

    dependencies = [
    ]  # Зависимости от других миграций (в данном случае нет зависимостей)

    operations = [
        # Создаем модель Order
        migrations.CreateModel(
            name='Order',  # Название модели
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Поле ID
                ('payment_method', models.CharField(choices=[
                    ('cash_courier', 'Наличными курьеру'),  # Выбор "Наличными курьеру"
                    ('card_courier', 'Картой курьеру'),   # Выбор "Картой курьеру"
                    ('card_online', 'Картой онлайн')     # Выбор "Картой онлайн"
                ], max_length=20, verbose_name='Способ оплаты')),  # Поле "Способ оплаты"
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),  # Поле "Дата создания"
                ('status', models.CharField(choices=[
                    ('created', 'Создан'),         # Статус "Создан"
                    ('processing', 'Обрабатывается'),  # Статус "Обрабатывается"
                    ('shipped', 'Отправлен'),      # Статус "Отправлен"
                    ('delivered', 'Доставлен'),    # Статус "Доставлен"
                    ('canceled', 'Отменен')        # Статус "Отменен"
                ], default='created', max_length=20, verbose_name='Статус')),  # Поле "Статус"
            ],
            options={
                'verbose_name': 'Заказ',        # Единственное число
                'verbose_name_plural': 'Заказы', # Множественное число
                'ordering': ['-created_at'],    # Сортировка по убыванию даты создания
            },
        ),
        # Создаем модель OrderItem
        migrations.CreateModel(
            name='OrderItem',  # Название модели
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Поле ID
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),  # Поле "Количество"
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),  # Поле "Цена"
            ],
            options={
                'verbose_name': 'Товар в заказе',       # Единственное число
                'verbose_name_plural': 'Товары в заказе',  # Множественное число
            },
        ),
        # Создаем модель ShippingAddress
        migrations.CreateModel(
            name='ShippingAddress',  # Название модели
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Поле ID
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),  # Поле "Имя"
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),  # Поле "Фамилия"
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),  # Поле "Почта"
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),  # Поле "Телефон"
                ('address_line_1', models.CharField(max_length=200, verbose_name='Адрес')),  # Поле "Адрес"
                ('address_line_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес (дополнительно)')),  # Поле "Адрес (дополнительно)"
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='checkout.order', verbose_name='Заказ')),  # Связь с моделью Order
            ],
            options={
                'verbose_name': 'Адрес доставки',  # Единственное число
                'verbose_name_plural': 'Адреса доставки',  # Множественное число
            },
        ),
    ]
